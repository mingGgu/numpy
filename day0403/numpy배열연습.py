import numpy as np

a = [5,5,5,4,3,2]
# 연습) 위의 데이터는 숫자 1을 표현하기 위한 최소한의 정보입니다.
#배열의 요소의 수만큼의 행, 요소중에 가장 큰 값 +1 만큼의 열을 갖는 2차원배열(0으로 채워진)을 만들고 각행의 배열의 요소에 해당하는 열에 1을 설정합니다.
max(a)
b = np.zeros([len(a),max(a)+1],dtype='int32')
print(b)
'''
[[0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]]
'''

b[[0,1,2,3,4,5],a] = 1
print(b)
'''
[[0 0 0 0 0 1]
 [0 0 0 0 0 1]
 [0 0 0 0 0 1]
 [0 0 0 0 1 0]
 [0 0 0 1 0 0]
 [0 0 1 0 0 0]]
'''

b[range(6),a] = 1
print(b)
'''
[[0 0 0 0 0 1]
 [0 0 0 0 0 1]
 [0 0 0 0 0 1]
 [0 0 0 0 1 0]
 [0 0 0 1 0 0]
 [0 0 1 0 0 0]]
'''

# one-hot Encoding 기계학습을 시키려면 학습시키고자 하는 정보(내용-글자, 그림)
# 기계학습이 가능한 상태로 만들어야 하는데 one-hot Encoding 기법을 많이 사용한다.




# # 연습) 속은 0으로 채워지고 테두리는 1로 채워지는 5*5 배열 만들기
#
# a = np.ones([5,5],dtype='int32')
# print(a)
# a[1:4,1:4] = 0
# a[1:-1,1:-1] = 0 #같은말 (1:-1 이런 표현에서는 라스트인덱스를 포함하지 않는다.)
# print('ones로 채운뒤')
# print(a)
#
# b = np.zeros([5,5],dtype='int32')
# print('zeros로 채운뒤1')
# rows =[0,0,0,0,0,4,4,4,4,4,1,2,3,1,2,3]
# cols = [0,1,2,3,4,0,1,2,3,4,0,0,0,4,4,4]
# b[rows,cols] = 1
# print(b)
#
# c = np.zeros([5,5],dtype='int32')
# c[0 -1,:] = 1
# '''
# [[0 0 0 0 0]
#  [0 0 0 0 0]
#  [0 0 0 0 0]
#  [0 0 0 0 0]
#  [1 1 1 1 1]]
# '''
#
# c[[0, -1],:] = 1
# '''
# [[1 1 1 1 1]
#  [0 0 0 0 0]
#  [0 0 0 0 0]
#  [0 0 0 0 0]
#  [1 1 1 1 1]]
# #  index array [0, -1] 의 뜻은 처음과 마지막 행,열 을 뜻한다.
#     행 자리에 [0, -1]을 넣어줬기때문에 여기서는 처음과 마지막 행을 뜻한다.
#     즉, 위의 fancy array의 뜻은 모든 열에 대하여 처음과 마지막 행을 1로 채워주세요 라는 말
# '''
# c[:,[0,-1]] = 1
# '''
# [[1 1 1 1 1]
#  [1 0 0 0 1]
#  [1 0 0 0 1]
#  [1 0 0 0 1]
#  [1 1 1 1 1]]
# '''
# print(c)
#
# # 대각선 만들기
# # rows =[0,1,2,3,4]
# # cols = [0,1,2,3,4]
#
# # 연습) 그림판에 그려진 칸만 1로 만들기
#
# ab = np.zeros([8,8],dtype='int32')
# rows1 = [1,2,2,3,4,4,5,5,6]
# cols1 = [5,4,5,4,3,4,2,3,2]
# ab[rows1, cols1] = 1
# print(ab)
# '''
# [[0 0 0 0 0 0 0 0]
#  [0 0 0 0 0 1 0 0]
#  [0 0 0 0 1 1 0 0]
#  [0 0 0 0 1 0 0 0]
#  [0 0 0 1 1 0 0 0]
#  [0 0 1 1 0 0 0 0]
#  [0 0 1 0 0 0 0 0]
#  [0 0 0 0 0 0 0 0]]
# '''
#
